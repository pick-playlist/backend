openapi: 3.0.0
info:
  version: 1.0.0
  title: PICKPL's API docs
  description: PICKPL's SERVER SEMINAR
  license:
    name: "Yuhyeon, Yeri, Seungtaek"
servers:
  - url: "http://localhost:3000/"
components:
  parameters: null
  #Schemas : model 정보
  schemas:
    user:
      properties:
        _id:
          type: string
          description: 오브젝트 아이디
        nickname:
          type: string
          description: 닉네임
        email:
          type: string
          description: 이메일 주소
        profilePhoto:
          type: string
          description: 프로필 사진
        isMember:
          type: boolean
          description: 멤버 여부
      music:
        properties:
          _id:
            type: string
            description: 오브젝트 아이디
          title:
            type: string
            description: 노래 제목
          comment:
            type: string
            description: 노래 등록 시 함께 입력한 코멘트
          proposer:
            type: ObjectId
            description: 노래 등록한 유저
          link:
            type: string
            description: 노래 유튜브 링크
          agree:
            type: number
            description: 찬성 득표수
          reject:
            type: number
            description: 반대 득표수
    Error:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
  #Examples
  examples:
    userExample:
      value:
        {
          "_id": "65d6f115b32758d2cd0559fd",
          "email": "qqff0311@naver.com",
          "nickname": "다시 유현쓰!",
          "__v": 0,
          "isMember": true,
          "profilePhoto": "https://health.chosun.com/site/data/img_dir/2023/07/17/2023071701753_0.jpg",
        }
  #Responses 재사용되는 애들
  responses:
    successResponse:
      description: successful request with no data
      content:
        application/json:
          schema:
            type: object
            example: { "status": 200, "success": true, "message": "message" }
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            success: false
            title: "Bad request"
            message: 잘못된 요청
    InternalServerError:
      description: 서버 에러
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            success: false
            title: "Internal server error"
            message: 서버 내부 오류
#Paths api 경로 지정
paths:
  /api/user:
    $ref: "./user.yaml#/~1user"
  /api/user/{userId}:
    $ref: "./user.yaml#/~1user~1{userId}"
  /api/user/signup:
    $ref: "./user.yaml#/~1user~1signup"
  /api/user/login:
    $ref: "./user.yaml#/~1user~1login"
  /api/user/guest-login:
    $ref: "./user.yaml#/~1user~1guest-login"
  /api/music:
    $ref: "./music.yaml#/~1music"
  /api/music/info/{musicId}:
    $ref: "./music.yaml#/~1music~1info~1{musicId}"
  /api/music/vote:
    $ref: "./music.yaml#/~1music~1vote"
  /api/playlist/info/{playlistId}:
    $ref: "./playlist.yaml#/~1playlist~1info~1{playlistId}"
  /api/playlist/music/:
    $ref: "./playlist.yaml#/~1playlist~1music"
