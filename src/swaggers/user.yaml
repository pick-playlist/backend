/user:
  get: 
    tags:
      - User
    summary: 모든 유저 정보 조회
    responses:
      '200':
        description: 유저 조회 성공
        content:
          application/json:
            schema:
              type: object
              example: {
              "status": 200,
                "success": true,
                "message": "유저 조회 성공",
                "data": [
                          {
                              "_id": "65d6f115b32758d2cd0559fd",
                              "email": "qqff0311@naver.com",
                              "nickname": "다시 유현쓰!",
                              "password": "$2b$10$PSDg3HpHqvUrgmtHNmS8HuH9PDkhzz0j/xOl1kvERwV4VqSh4jxZW",
                              "playlist": "65d6f115b32758d2cd0559f7",
                              "acceptPlaylist": "65d6f115b32758d2cd0559f9",
                              "rejectPlaylist": "65d6f115b32758d2cd0559fb",
                              "__v": 0,
                              "isMember": true,
                              "profilePhoto": "https://health.chosun.com/site/data/img_dir/2023/07/17/2023071701753_0.jpg"
                          },
                          {
                              "profilePhoto": "https://slack-imgs.com/?c=1&o1=ro&url=https%3A%2F%2Fcdn3d.iconscout.com%2F3d%2Fpremium%2Fthumb%2Fuser-4620688-3833029.png%3Ff%3Dwebp",
                              "_id": "65d6f6598a9174603ee342ac",
                              "nickname": "비회원쓰",
                              "isMember": false,
                              "__v": 0
                          },
                        ]
              }
      '400':
        $ref: './openapi.yaml#/components/responses/BadRequest'
      '500':
        $ref: './openapi.yaml#/components/responses/InternalServerError'

/user/:userId:
  get:
    tags:
      - User
    summary: 유저 정보 조회
    parameters:
      - in: path
        name: userId
        required: true
        description: 조회하려는 유저의 오브젝트 아이디
        schema:
          type: string
    responses:
      '200':
        description: 유저 조회 성공
        content:
          application/json:
            schema:
              type: object
              example: {
              "status": 200,
                "success": true,
                "message": "유저 조회 성공",
                "data": {
                  "_id": "6283a755c2f673e5e81a6fea",
                  "profilePhoto": "s3.dfjkkenfd.com/yeri.png",
                  "email": "validateTest-email2@naver.com",
                  "nickname": "김예리",
                  "success_rate_uploaded_songs": "3499",
                  "accepted_playlists": "6283a755c2f673e5e81a6fea",
                  "rejected_playlists": "6283a755c2f673e5e81a6fea",
                }
              }
      '400':
        $ref: './openapi.yaml#/components/responses/BadRequest'
      '500':
        $ref: './openapi.yaml#/components/responses/InternalServerError'


  put:
    tags:
      - User
    summary: 유저 정보 수정
    parameters:
      - in: path
        name: nickname
        required: false
        description: 유저 정보를 수정하려는 회원의 닉네임
        schema:
          type: string
      - in: path
        name: profilePhoto
        required: false
        description: 유저 정보를 수정하려는 회원의 프로필 사진
        schema:
          type: string
    consumes:
      - application/json
    requestBody:
      description: \[Optional\] nickname, profilePhoto
      x-name: body
      required: true
      content:
        application/json:
          schema:
            $ref: './openapi.yaml#/components/schemas/user'
    responses:
      '200':
        description: 유저 수정 성공
        content:
          application/json:
            schema:
              type: object
              example: {
              "status": 200,
                "success": true,
                "message": "유저 수정 성공",
                "data": {
                  "_id": "6283a755c2f673e5e81a6fea",
                  "profilePhoto": "new.s3.dfjkkenfd.com/yeri.png",
                  "email": "validateTest-email2@naver.com",
                  "nickname": "new김예리",
                  "success_rate_uploaded_songs": "3499",
                  "accepted_playlists": "6283a755c2f673e5e81a6fea",
                  "rejected_playlists": "6283a755c2f673e5e81a6fea",
                }
              }
      '400':
        $ref: './openapi.yaml#/components/responses/BadRequest'
      '500':
        $ref: './openapi.yaml#/components/responses/InternalServerError'


/user/signup:
  post:
    tags:
      - User
    summary: 회원 가입
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                description: 회원가입하려는 사용자의 아이디
              password:
                type: string
                description: 회원가입하려는 사용자의 패스워드
              nickname:
                type: string
                description: 회원가입하려는 사용자의 닉네임
    responses:
      '200':
        description: 회원 가입 성공
        content:
          application/json:
            schema:
              type: object
              example: {
              "status": 201,
                "success": true,
                "message": "회원 가입 성공",
                "data": {
                  "_id": "6283a755c2f673e5e81a6fea",
                  "nickname": "김예리바보",
                }
              }
      '400':
        $ref: './openapi.yaml#/components/responses/BadRequest'
      '500':
        $ref: './openapi.yaml#/components/responses/InternalServerError'


/user/login:
  post:
    tags:
      - User
    summary: 로그인
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                description: 로그인하려는 사용자의 아이디
              password:
                type: string
                description: 로그인하려는 사용자의 패스워드
              nickname:
                type: string
                description: 로그인하려는 사용자의 닉네임
              isMember:
                type: boolean
                description: 회원 여부(회원 로그인은 true, 비회원 로그인은 false)
    responses:
      '200':
        description: 로그인 성공
        content:
          application/json:
            schema:
              type: object
              example: {
              "status": 201,
                "success": true,
                "message": "로그인 성공",
                "data": {
                  "token": "kaflkj3r432332434lk234lkm"
                }
              }
      '400':
        $ref: './openapi.yaml#/components/responses/BadRequest'
      '500':
        $ref: './openapi.yaml#/components/responses/InternalServerError'


/user/password:
  post:
    tags:
      - User
    summary: 비밀번호 찾기
    requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: 회원가입하려는 사용자의 아이디
    responses:
      '200':
        description: 비밀번호 찾기 성공
        content:
          application/json:
            schema:
              type: object
              example: {
              "status": 200,
                "success": true,
                "message": "비밀번호 찾기 성공",
                "data": {
                  "password": "kaflkj3r432332434lk234lkm"
                }
              }
      '400':
        $ref: './openapi.yaml#/components/responses/BadRequest'
      '500':
        $ref: './openapi.yaml#/components/responses/InternalServerError'


/user/logout:
  post:
    tags:
      - User
    summary: 로그아웃
    parameters:
    responses:
      '200':
        description: 비밀번호 찾기 성공
        content:
          application/json:
            schema:
              type: object
              example: {
              "status": 200,
                "success": true,
                "message": "로그아웃 성공",
              }
      '400':
        $ref: './openapi.yaml#/components/responses/BadRequest'
      '500':
        $ref: './openapi.yaml#/components/responses/InternalServerError'


